

// //import "./locationSelector.css"


// import React, { useState } from 'react';
// import { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';
// import "leaflet/dist/leaflet.css";
// import { Icon, divIcon } from 'leaflet';
// import {geolocated} from 'react-geolocated';
// // import { MarkerClusterGroup } from 'react-leaflet-cluster'; // Corrected import statement




// const LocationSelector = () => {
//   const DEFAULT_LANGITUDE = 34.855499
//   const DEFAULT_LATITUDE = 32.109333
//   const langitude = this.props.coords? this.props.coords.langitude : DEFAULT_LANGITUDE;
//   const latitude = this.props.coords? this.props.coords.latitude : DEFAULT_LATITUDE;

//   const [selectedPlace, setSelectedPlace] = useState(null);

//   const handleMapClick = (e) => {
//     const { lat, lng } = e.latlng;
//     setSelectedPlace({ lat, lng });
//   };


//   const markers = [
//     {
//       position: [DEFAULT_LANGITUDE, DEFAULT_LATITUDE],
//       popUp: "hiii"
//     }
//   ]

//   const customIcon = new Icon({
//     iconUrl: "https://cdn-icons-png.flaticon.com/128/2776/2776000.png",
//     iconSize: [38, 38]
//   });

//   const createCustomClusterIcon = (cluster) => {
//     return new divIcon({
//       html: `<div class="cluster-icon">${cluster.getChildCount()}</div>`,
//       className: "custom-marker-cluster",
//       iconSize: PerformanceObserverEntryList(33, 33, true)
//     });
//   }

//   return (
//     <div style={{ width: "300px", height: "300px" }} >
//       <MapContainer
//         center={[langitude, latitude]}
//         zoom={8}
//         style={{ height: '100%', width: '100%', overflow: "hidden" }}
//         onClick={handleMapClick}
//         scrollWheelZoom={true}
//       >
//         <TileLayer
//           url="https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"
//           attribution='&copy; <a href="https://www.openstreetmap.org/copyright">trip planner</a> contributors'
//         />

//         {selectedPlace && (
//           <Marker position={[selectedPlace.lat, selectedPlace.lng]}>

//           </Marker>
//         )}


//         {/* <MarkerClusterGroup 
//         chunkedLoadeing
//         iconCreateFunction={createCustomClusterIcon}
//          > */}
//           {markers.map(marker => (
//             <Marker position={marker.position} icon={customIcon}>
//               <Popup>{marker.popUp}</Popup>
//             </Marker>

//           ))}
//         {/* </MarkerClusterGroup> */}
//         {
//           !this.props.coords ? 
//           <div className ="loading">Loading</div>
//           :
//           <Marker position={[langitude, latitude]}>
//             <Popup>You are here!</Popup>
//           </Marker>
//         }

//       </MapContainer>
//     </div>
//   );
// };

// export default LocationSelector;








// // {
// //   "name": "resumebulider",
// //   "private": true,
// //   "version": "0.0.0",
// //   "type": "module",
// //   "scripts": {
// //     "dev": "vite",
// //     "build": "vite build",
// //     "lint": "eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0",
// //     "preview": "vite preview"
// //   },
// //   "dependencies": {
// //     "@emotion/react": "^11.11.3",
// //     "@emotion/styled": "^11.11.0",
// //     "@fortawesome/fontawesome-svg-core": "^6.5.1",
// //     "@fortawesome/free-solid-svg-icons": "^6.5.1",
// //     "@fortawesome/react-fontawesome": "^0.2.0",
// //     "@mui/icons-material": "^5.15.2",
// //     "@mui/material": "^5.15.2",
// //     "@react-pdf/renderer": "^3.1.14",
// //     "firebase": "^10.7.1",
// //     "html2pdf.js": "^0.10.1",
// //     "leaflet": "^1.9.4",
// //     "leaflet-control-geocoder": "^2.4.0",
// //     "leaflet-routing-machine": "^3.2.12",
// //     "react": "^18.2.0",
// //     "react-dom": "^18.2.0",
// //     "react-leaflet": "^4.2.1",
// //     "react-leaflet-markercluster": "^3.0.0-rc1",
// //     "react-router-dom": "^6.21.0"
// //   },
// //   "devDependencies": {
// //     "@types/react": "^18.2.43",
// //     "@types/react-dom": "^18.2.17",
// //     "@vitejs/plugin-react": "^4.2.1",
// //     "eslint": "^8.55.0",
// //     "eslint-plugin-react": "^7.33.2",
// //     "eslint-plugin-react-hooks": "^4.6.0",
// //     "eslint-plugin-react-refresh": "^0.4.5",
// //     "vite": "^5.0.8"
// //   }
// // }





// import React, { useState } from 'react';
// import { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';
// import "leaflet/dist/leaflet.css";
// import { Icon, divIcon } from 'leaflet';
// import {geolocated} from 'react-geolocated';
// // import { MarkerClusterGroup } from 'react-leaflet-cluster'; // Corrected import statement




// const LocationSelector = () => {
//   const DEFAULT_LANGITUDE = 34.855499
//   const DEFAULT_LATITUDE = 32.109333
//   const langitude = this.props.coords? this.props.coords.langitude : DEFAULT_LANGITUDE;
//   const latitude = this.props.coords? this.props.coords.latitude : DEFAULT_LATITUDE;

//   const [selectedPlace, setSelectedPlace] = useState(null);

//   const handleMapClick = (e) => {
//     const { lat, lng } = e.latlng;
//     setSelectedPlace({ lat, lng });
//   };


//   const markers = [
//     {
//       position: [DEFAULT_LANGITUDE, DEFAULT_LATITUDE],
//       popUp: "hiii"
//     }
//   ]

//   const customIcon = new Icon({
//     iconUrl: "https://cdn-icons-png.flaticon.com/128/2776/2776000.png",
//     iconSize: [38, 38]
//   });

//   const createCustomClusterIcon = (cluster) => {
//     return new divIcon({
//       html: `<div class="cluster-icon">${cluster.getChildCount()}</div>`,
//       className: "custom-marker-cluster",
//       iconSize: PerformanceObserverEntryList(33, 33, true)
//     });
//   }

//   return (
//     <div style={{ width: "300px", height: "300px" }} >
//       <MapContainer
//         center={[langitude, latitude]}
//         zoom={8}
//         style={{ height: '100%', width: '100%', overflow: "hidden" }}
//         onClick={handleMapClick}
//         scrollWheelZoom={true}
//       >
//         <TileLayer
//           url="https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"
//           attribution='&copy; <a href="https://www.openstreetmap.org/copyright">trip planner</a> contributors'
//         />

//         {selectedPlace && (
//           <Marker position={[selectedPlace.lat, selectedPlace.lng]}>

//           </Marker>
//         )}


//         {/* <MarkerClusterGroup 
//         chunkedLoadeing
//         iconCreateFunction={createCustomClusterIcon}
//          > */}
//           {markers.map(marker => (
//             <Marker position={marker.position} icon={customIcon}>
//               <Popup>{marker.popUp}</Popup>
//             </Marker>

//           ))}
//         {/* </MarkerClusterGroup> */}
//         {
//           !this.props.coords ? 
//           <div className ="loading">Loading</div>
//           :
//           <Marker position={[langitude, latitude]}>
//             <Popup>You are here!</Popup>
//           </Marker>
//         }

//       </MapContainer>
//     </div>
//   );
// };

// export default LocationSelector;




//מיקום של המשתמש

// import React, { useState, useEffect } from 'react';
// import { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';
// import "leaflet/dist/leaflet.css";

// const LocationSelector = () => {
//   const [userLocation, setUserLocation] = useState(null);

//   useEffect(() => {
//     // Check if the geolocation API is available
//     if ('geolocation' in navigator) {
//       // Get user's current location
//       navigator.geolocation.getCurrentPosition(
//         (position) => {
//           const { latitude, longitude } = position.coords;
//           setUserLocation({ lat: latitude, lng: longitude });
//         },
//         (error) => {
//           console.error('Error getting user location:', error.message);
//         }
//       );
//     } else {
//       console.error('Geolocation is not supported by your browser');
//     }
//   }, []);

//   return (
//     <MapContainer center={[0, 0]} zoom={2} style={{ height: '400px', width: '100%' }}>
//       <TileLayer
//         url="https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"
//         attribution='&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
//       />
//       {userLocation && (
//         <Marker position={[userLocation.lat, userLocation.lng]}>
//           <Popup>You are here!</Popup>
//         </Marker>
//       )}
//     </MapContainer>
//   );
// };

// export default LocationSelector;



//לחיצה על המפה



import React, { useState } from 'react';
import { MapContainer, TileLayer, Marker, Popup, useMapEvents } from 'react-leaflet';

const MapWithClickHandler = () => {
  const [clickedLocation, setClickedLocation] = useState(null);

  const handleMapClick = (event) => {
    const { lat, lng } = event.latlng;
    setClickedLocation({ lat, lng });
  };

  return (
    <MapContainer center={[0, 0]} zoom={2} style={{ height: '400px', width: '100%' }}>
      <TileLayer
        url="https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"
        attribution='&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
      />
      <ClickHandler onMapClick={handleMapClick} />
      {clickedLocation && (
        <Marker position={[clickedLocation.lat, clickedLocation.lng]}>
          <Popup>
            <strong>Clicked Location:</strong> {clickedLocation.lat.toFixed(4)}, {clickedLocation.lng.toFixed(4)}
          </Popup>
        </Marker>
      )}
    </MapContainer>
  );
};

const ClickHandler = ({ onMapClick }) => {
  const map = useMapEvents({
    click: onMapClick,
  });

  return null; // This component doesn't render anything, it just attaches the event handler
};

export default MapWithClickHandler;






//עובד מיקום של אדם מרקר ומפה
// //import "./locationSelector.css"


// import React, { useState, useEffect } from 'react';
// import { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';
// import "leaflet/dist/leaflet.css";
// import { Icon, divIcon } from 'leaflet';
// // import { MarkerClusterGroup } from 'react-leaflet-cluster'; // Corrected import statement
// import MarkerClusterGroup from 'react-leaflet-markercluster';


// const LocationSelector = () => {
//   const DEFAULT_LANGITUDE = 34.855499
//   const DEFAULT_LATITUDE = 32.109333

//   const [userLocation, setUserLocation] = useState(null);
//   const [selectedPlace, setSelectedPlace] = useState(null);

//   const handleMapClick = (e) => {
//     const { lat, lng } = e.latlng;
//     setSelectedPlace({ lat, lng });
//   };


//   const markers = [
//     {
//       position: [DEFAULT_LATITUDE, DEFAULT_LANGITUDE],
//       popUp: "hiii"
//     }
//   ]

//   const customIcon = new Icon({
//     iconUrl: "https://cdn-icons-png.flaticon.com/128/2776/2776000.png",
//     iconSize: [38, 38]
//   });

//   const createCustomClusterIcon = (cluster) => {
//     return new divIcon({
//       html: `<div class="cluster-icon">${cluster.getChildCount()}</div>`,
//       className: "custom-marker-cluster",
//       iconSize: PerformanceObserverEntryList(33, 33, true)
//     });
//   }

//   useEffect(() => {
//     // Check if the geolocation API is available
//     if ('geolocation' in navigator) {
//       // Get user's current location
//       navigator.geolocation.getCurrentPosition(
//         (position) => {
//           const { latitude, longitude } = position.coords;
//           setUserLocation({ lat: latitude, lng: longitude });
//         },
//         (error) => {
//           console.error('Error getting user location:', error.message);
//         }
//       );
//     } else {
//       console.error('Geolocation is not supported by your browser');
//     }
//   }, [DEFAULT_LATITUDE, DEFAULT_LANGITUDE]);


//   return (
//     <div style={{ width: "300px", height: "300px" }} >
//       <MapContainer
//         center={[DEFAULT_LATITUDE, DEFAULT_LANGITUDE]}
//         zoom={8}
//         style={{ height: '100%', width: '100%', overflow: "hidden" }}
//         // onClick={handleMapClick}
//         scrollWheelZoom={true}
//       >
//         <TileLayer
//           url="https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"
//           attribution='&copy; <a href="https://www.openstreetmap.org/copyright">trip planner</a> contributors'
//         />

//         {/* {selectedPlace && (
//           <Marker position={[selectedPlace.lat, selectedPlace.lng]}>

//           </Marker>
//         )} */}

//         {userLocation && (
//           <Marker position={[userLocation.lat, userLocation.lng]}>
//             <Popup>You are here!</Popup>
//           </Marker>
//         )}


//         {/* <MarkerClusterGroup 
//         chunkedLoadeing
//         iconCreateFunction={createCustomClusterIcon}
//          > */}

//         {/* <MarkerClusterGroup
//           chunkedLoading
//           iconCreateFunction={createCustomClusterIcon}
//         > */}

//         {markers.map(marker => (
//           <Marker position={marker.position} icon={customIcon}>
//             <Popup>{marker.popUp}</Popup>
//           </Marker>

//         ))}
//         {/* </MarkerClusterGroup> */}
//         {/* </MarkerClusterGroup> */}

//       </MapContainer>
//     </div>
//   );
// };

// export default LocationSelector;


